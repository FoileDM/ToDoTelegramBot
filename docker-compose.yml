services:
  postgres:
    image: postgres:15-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-todo}
      POSTGRES_USER: ${POSTGRES_USER:-todo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-todo}
    ports: ["5432:5432"]
    volumes: [db_data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8000:8000"]
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    depends_on:
      web:
        condition: service_healthy
    command: bash -c "python -m main"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

volumes:
  db_data:
